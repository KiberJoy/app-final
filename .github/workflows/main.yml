name: Build and Deploy gh pages

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '44 9 * * *'
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
#       - name: Log into registry ${{ env.REGISTRY }}
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to build repo
        run: |
          sudo apt install nodejs npm
          npm install -g @angular/cli@12
          npm install
          ng build --prod
          cd ./dist/abz-test-app
          git init
          git add --all
          git config --global user.email "kiberjoy@gmail.com"
          git config --global user.name "KiberJoy"
          git commit -am "build"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/KiberJoy/kiberjoy.github.io.git"
          git push --set-upstream origin master

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action

#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

# Build and push Docker image with Buildx (don't push on PR)
# https://github.com/docker/build-push-action
#- name: Build and push Docker image
#  uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#  with:
#    context: .
#    push: ${{ github.event_name != 'pull_request' }}
#    tags: ${{ steps.meta.outputs.tags }}
#    labels: ${{ steps.meta.outputs.labels }}

#       - name: Build and push Docker image
#         run: |
#               export NG_PROJECT=${{ secrets.NG_PROJECT }}
#               docker build --file Dockerfile --tag ${{ steps.meta.outputs.tags }} --build-arg NG_PROJECT .
#               docker push ${{ steps.meta.outputs.tags }}

#       - name: Install SSH Key
#         uses: shimataro/ssh-key-action@v2
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

#       # https://zellwk.com/blog/github-actions-deploy/
#       - name: Adding Known Hosts
#         run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

#       - name: Deploy by SSH
#         run: |
#               ssh -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "/bin/bash
#                   export NG_PROJECT=${{ secrets.NG_PROJECT }}
#                   echo "Stopping service"
#                   service ${{ secrets.NG_SYSTEMD_SERVICE }} stop
#                   #echo "Docker login ${{ env.REGISTRY }} ${{ github.repository_owner }} ${{ secrets.GITHUB_TOKEN }}"
#                   #docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} -p "${{ secrets.GITHUB_TOKEN }}"
#                   docker login ${{ env.REGISTRY }} -u FastInvite -p "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"
#                   echo "Removing image"
#                   docker rmi ${{ steps.meta.outputs.tags }}
#                   echo "Starting service"
#                   service ${{ secrets.NG_SYSTEMD_SERVICE }} start
#               "
